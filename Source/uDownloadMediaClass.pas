unit uDownloadMediaClass;

//  *************************************************
//    Generated By: JsonToDelphiClass - 0.65
//    Project link: https://github.com/PKGeorgiev/Delphi-JsonToDelphiClass
//    Generated On: 2024-06-01 16:10:44
//  *************************************************
//    Created By  : Petar Georgiev - 2014
//    WebSite     : http://pgeorgiev.com
//  *************************************************

interface

uses Generics.Collections, Rest.Json;

type

TSizeClass = class
private
  FFileLength: String;
  FHeight: Extended;
  FWidth: Extended;
public
  property fileLength: String read FFileLength write FFileLength;
  property height: Extended read FHeight write FHeight;
  property width: Extended read FWidth write FWidth;
  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TSizeClass;
end;

TResultDownloadMediaClass = class
private
  FBase64: String;
  FCaption: String;
  FMediaType: String;
  FMimetype: String;
  FSize: TSizeClass;
public
  property base64: String read FBase64 write FBase64;
  property caption: String read FCaption write FCaption;
  property mediaType: String read FMediaType write FMediaType;
  property mimetype: String read FMimetype write FMimetype;
  property size: TSizeClass read FSize write FSize;
  constructor Create;
  destructor Destroy; override;
  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TResultDownloadMediaClass;
end;

implementation

{TSizeClass}


function TSizeClass.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TSizeClass.FromJsonString(AJsonString: string): TSizeClass;
begin
  result := TJson.JsonToObject<TSizeClass>(AJsonString)
end;

{TResultDownloadMediaClass}

constructor TResultDownloadMediaClass.Create;
begin
  inherited;
  FSize := TSizeClass.Create();
end;

destructor TResultDownloadMediaClass.Destroy;
begin
  FSize.free;
  inherited;
end;

function TResultDownloadMediaClass.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TResultDownloadMediaClass.FromJsonString(AJsonString: string): TResultDownloadMediaClass;
begin
  result := TJson.JsonToObject<TResultDownloadMediaClass>(AJsonString)
end;

end.
